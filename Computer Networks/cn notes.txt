Q.STANDARDS AND ADMINISTRATION
In the discussion of the Internet and its protocol, we often see a reference to a standard
or an administration entity. In this section, we introduce these standards and administration entities for those readers that are not familiar with them; the section can be
skipped if the reader is familiar with them.

Internet Standards
An Internet standard is a thoroughly tested specification that is useful to and adhered to
by those who work with the Internet. It is a formalized regulation that must be followed.
There is a strict procedure by which a specification attains Internet standard status. A specification begins as an Internet draft. An Internet draft is a working document (a work in
progress) with no official status and a six-month lifetime. Upon recommendation from the
Internet authorities, a draft may be published as a Request for Comment (RFC). Each
RFC is edited, assigned a number, and made available to all interested parties. RFCs go
through maturity levels and are categorized according to their requirement level.


Maturity Levels
An RFC, during its lifetime, falls into one of six maturity levels: proposed standard, draft
standard, Internet standard, historic, experimental, and informational (see Figure 1.16).
❑ Proposed Standard. A proposed standard is a specification that is stable, well
understood, and of sufficient interest to the Internet community. At this level, the
specification is usually tested and implemented by several different groups.
Draft Standard. A proposed standard is elevated to draft standard status after at
least two successful independent and interoperable implementations. Barring difficulties, a draft standard, with modifications if specific problems are encountered,
normally becomes an Internet standard.
❑ Internet Standard. A draft standard reaches Internet standard status after demonstrations of successful implementation.
❑ Historic. The historic RFCs are significant from a historical perspective. They
either have been superseded by later specifications or have never passed the necessary maturity levels to become an Internet standard.
❑ Experimental. An RFC classified as experimental describes work related to an
experimental situation that does not affect the operation of the Internet. Such an
RFC should not be implemented in any functional Internet service.
❑ Informational. An RFC classified as informational contains general, historical, or
tutorial information related to the Internet. It is usually written by someone in a
non-Internet organization, such as a vendor.

Requirement Levels
RFCs are classified into five requirement levels: required, recommended, elective, limited use, and not recommended.
❑ Required. An RFC is labeled required if it must be implemented by all Internet
systems to achieve minimum conformance. For example, IP and ICMP (Chapter 19)
are required protocols.
❑ Recommended. An RFC labeled recommended is not required for minimum
conformance; it is recommended because of its usefulness. For example, FTP
(Chapter 26) and TELNET (Chapter 26) are recommended protocols.
❑ Elective. An RFC labeled elective is not required and not recommended. However,
a system can use it for its own benefit.
Figure 1.16 Maturity levels of an RFC
Experimental Proposed standard Informational
Draft standard
Six months and two tries
Four months and two tries
Internet standard
Historic
Internet draft
24 PART I OVERVIEW
❑ Limited Use. An RFC labeled limited use should be used only in limited situations.
Most of the experimental RFCs fall under this category.
❑ Not Recommended. An RFC labeled not recommended is inappropriate for general use. Normally a historic (deprecated) RFC may fall under this category. 


Q.Internet Administration
The Internet, with its roots primarily in the research domain, has evolved and gained
a broader user base with significant commercial activity. Various groups that coordinate
Internet issues have guided this growth and development. Appendix G gives the addresses,
e-mail addresses, and telephone numbers for some of these groups. Figure 1.17
shows the general organization of Internet administration.

ISOC
The Internet Society (ISOC) is an international, nonprofit organization formed in
1992 to provide support for the Internet standards process. ISOC accomplishes this
through maintaining and supporting other Internet administrative bodies such as IAB,
IETF, IRTF, and IANA (see the following sections). ISOC also promotes research and
other scholarly activities relating to the Internet. 


IAB
The Internet Architecture Board (IAB) is the technical advisor to the ISOC. The
main purposes of the IAB are to oversee the continuing development of the TCP/IP
Protocol Suite and to serve in a technical advisory capacity to research members of the
Internet community. IAB accomplishes this through its two primary components, the
Internet Engineering Task Force (IETF) and the Internet Research Task Force (IRTF).
Another responsibility of the IAB is the editorial management of the RFCs, described earlier. IAB is also the external liaison between the Internet and other standards organizations and forums.
IETF
The Internet Engineering Task Force (IETF) is a forum of working groups managed
by the Internet Engineering Steering Group (IESG). IETF is responsible for identifying
operational problems and proposing solutions to these problems. IETF also develops
and reviews specifications intended as Internet standards. The working groups are collected into areas, and each area concentrates on a specific topic. Currently nine areas
have been defined. The areas include applications, protocols, routing, network management next generation (IPng), and security.
IRTF
The Internet Research Task Force (IRTF) is a forum of working groups managed by
the Internet Research Steering Group (IRSG). IRTF focuses on long-term research topics related to Internet protocols, applications, architecture, and technology.


Q.PROTOCOL LAYERING
We defined the term protocol in Chapter 1. In data communication and networking, a
protocol defines the rules that both the sender and receiver and all intermediate devices
need to follow to be able to communicate effectively. When communication is simple,
we may need only one simple protocol; when the communication is complex, we may need to divide the task between different layers, in which case we need a protocol at each layer, or protocol layering.


Q.TCP/IP PROTOCOL SUITE
Now that we know about the concept of protocol layering and the logical communication between layers in our second scenario, we can introduce the TCP/IP (Transmission
Control Protocol/Internet Protocol). TCP/IP is a protocol suite (a set of protocols organized in different layers) used in the Internet today. It is a hierarchical protocol made up
of interactive modules, each of which provides a specific functionality. The term hierarchical means that each upper level protocol is supported by the services provided by
one or more lower level protocols. The original TCP/IP protocol suite was defined as
four software layers built upon the hardware. Today, however, TCP/IP is thought of as a
five-layer model. Figure 2.4 shows both configurations.


Q.Layers of OSI model.
Physical Layer (Layer 1) :
The lowest layer of the OSI reference model is the physical layer. It is responsible for the actual physical connection between the devices. The physical layer contains information in the form of bits. It is responsible for transmitting individual bits from one node to the next. When receiving data, this layer will get the signal received and convert it into 0s and 1s and send them to the Data Link layer, which will put the frame back together.  
The functions of the physical layer are as follows:  
Bit synchronization: The physical layer provides the synchronization of the bits by providing a clock. This clock controls both sender and receiver thus providing synchronization at bit level.
Bit rate control: The Physical layer also defines the transmission rate i.e. the number of bits sent per second.
Physical topologies: Physical layer specifies the way in which the different, devices/nodes are arranged in a network i.e. bus, star, or mesh topology.
Transmission mode: Physical layer also defines the way in which the data flows between the two connected devices. The various transmission modes possible are Simplex, half-duplex and full-duplex.

2. Data Link Layer (DLL) (Layer 2) :
The data link layer is responsible for the node-to-node delivery of the message. The main function of this layer is to make sure data transfer is error-free from one node to another, over the physical layer. When a packet arrives in a network, it is the responsibility of DLL to transmit it to the Host using its MAC address. 
Data Link Layer is divided into two sublayers:  
Logical Link Control (LLC)
Media Access Control (MAC)
The packet received from the Network layer is further divided into frames depending on the frame size of NIC(Network Interface Card). DLL also encapsulates Sender and Receiver’s MAC address in the header. 
The Receiver’s MAC address is obtained by placing an ARP(Address Resolution Protocol) request onto the wire asking “Who has that IP address?” and the destination host will reply with its MAC address.  

The functions of the Data Link layer are :  
Framing: Framing is a function of the data link layer. It provides a way for a sender to transmit a set of bits that are meaningful to the receiver. This can be accomplished by attaching special bit patterns to the beginning and end of the frame.
Physical addressing: After creating frames, the Data link layer adds physical addresses (MAC address) of the sender and/or receiver in the header of each frame.
Error control: Data link layer provides the mechanism of error control in which it detects and retransmits damaged or lost frames.
Flow Control: The data rate must be constant on both sides else the data may get corrupted thus, flow control coordinates the amount of data that can be sent before receiving acknowledgement.
Access control: When a single communication channel is shared by multiple devices, the MAC sub-layer of the data link layer helps to determine which device has control over the channel at a given time.

3. Network Layer (Layer 3) :
The network layer works for the transmission of data from one host to the other located in different networks. It also takes care of packet routing i.e. selection of the shortest path to transmit the packet, from the number of routes available. The sender & receiver’s IP addresses are placed in the header by the network layer. 

The functions of the Network layer are :  
Routing: The network layer protocols determine which route is suitable from source to destination. This function of the network layer is known as routing.
Logical Addressing: In order to identify each device on internetwork uniquely, the network layer defines an addressing scheme. The sender & receiver’s IP addresses are placed in the header by the network layer. Such an address distinguishes each device uniquely and universally.


4. Transport Layer (Layer 4) :
The transport layer provides services to the application layer and takes services from the network layer. The data in the transport layer is referred to as Segments. It is responsible for the End to End Delivery of the complete message. The transport layer also provides the acknowledgement of the successful data transmission and re-transmits the data if an error is found.
At sender’s side: Transport layer receives the formatted data from the upper layers, performs Segmentation, and also implements Flow & Error control to ensure proper data transmission. It also adds Source and Destination port numbers in its header and forwards the segmented data to the Network Layer. 
At receiver’s side: Transport Layer reads the port number from its header and forwards the Data which it has received to the respective application. It also performs sequencing and reassembling of the segmented data. 

The functions of the transport layer are as follows:  
Segmentation and Reassembly: This layer accepts the message from the (session) layer, and breaks the message into smaller units. Each of the segments produced has a header associated with it. The transport layer at the destination station reassembles the message.
Service Point Addressing: In order to deliver the message to the correct process, the transport layer header includes a type of address called service point address or port address. Thus by specifying this address, the transport layer makes sure that the message is delivered to the correct process.


5. Session Layer (Layer 5) :
This layer is responsible for the establishment of connection, maintenance of sessions, authentication, and also ensures security. 

The functions of the session layer are :  
Session establishment, maintenance, and termination: The layer allows the two processes to establish, use and terminate a connection.
Synchronization: This layer allows a process to add checkpoints which are considered synchronization points into the data. These synchronization points help to identify the error so that the data is re-synchronized properly, and ends of the messages are not cut prematurely and data loss is avoided.
Dialog Controller: The session layer allows two systems to start communication with each other in half-duplex or full-duplex.


6. Presentation Layer (Layer 6):
The presentation layer is also called the Translation layer. The data from the application layer is extracted here and manipulated as per the required format to transmit over the network. 

The functions of the presentation layer are : 
Translation: For example, ASCII to EBCDIC.
Encryption/ Decryption: Data encryption translates the data into another form or code. The encrypted data is known as the ciphertext and the decrypted data is known as plain text. A key value is used for encrypting as well as decrypting data.
Compression: Reduces the number of bits that need to be transmitted on the network.

7. Application Layer (Layer 7) :
At the very top of the OSI Reference Model stack of layers, we find the Application layer which is implemented by the network applications. These applications produce the data, which has to be transferred over the network. This layer also serves as a window for the application services to access the network and for displaying the received information to the user. 

The functions of the Application layer are :  
Network Virtual Terminal
FTAM-File transfer access and management
Mail Services
Directory Services


Q.Decapsulation and Encapsulation at the Router
At the router, we have both decapsulation and encapsulation because the router is connected to two or more links.
1. After the set of bits are delivered to the data-link layer, this layer decapsulates the
datagram from the frame and passes it to the network layer.
2. The network layer only inspects the source and destination addresses in the datagram
header and consults its forwarding table to find the next hop to which the datagram is to
be delivered. The contents of the datagram should not be changed by the network layer
in the router unless there is a need to fragment the datagram if it is too big to be passed
through the next link. The datagram is then passed to the data-link layer of the next link.
3. The data-link layer of the next link encapsulates the datagram in a frame and
passes it to the physical layer for transmission.

Q.Decapsulation at the Destination Host
At the destination host, each layer only decapsulates the packet received, removes the
payload, and delivers the payload to the next-higher layer protocol until the message
reaches the application layer. It is necessary to say that decapsulation in the host
involves error checking. 


Q.Encapsulation at the Source Host
At the source, we have only encapsulation.
1. At the application layer, the data to be exchanged is referred to as a message. A
message normally does not contain any header or trailer, but if it does, we refer to
the whole as the message. The message is passed to the transport layer.
2. The transport layer takes the message as the payload, the load that the transport
layer should take care of. It adds the transport layer header to the payload, which
contains the identifiers of the source and destination application programs that want to communicate plus some more information that is needed for the end-toend delivery of the message, such as information needed for flow, error control, or
congestion control. The result is the transport-layer packet, which is called the segment (in TCP) and the user datagram (in UDP). The transport layer then passes the
packet to the network layer.
3. The network layer takes the transport-layer packet as data or payload and adds its
own header to the payload. The header contains the addresses of the source and destination hosts and some more information used for error checking of the header, fragmentation information, and so on. The result is the network-layer packet, called a datagram. The network layer then passes the packet to the data-link layer.
4. The data-link layer takes the network-layer packet as data or payload and adds its
own header, which contains the link-layer addresses of the host or the next hop (the
router). The result is the link-layer packet, which is called a frame. The frame is
passed to the physical layer for transmission.


Q.OSI MODEL	
OSI stands for Open Systems Interconnection. It has been developed by ISO – ‘International Organization for Standardization‘, in the year 1984. It is a 7 layer architecture with each layer having specific functionality to perform. All these 7 layers work collaboratively to transmit the data from one person to another across the globe. 

Q.TRANSMISSION MODES
Of primary concern when we are considering the transmission of data from one device
to another is the wiring, and of primary concern when we are considering the wiring is
the data stream. Do we send 1 bit at a time; or do we group bits into larger groups and,
if so, how? The transmission of binary data across a link can be accomplished in either
parallel or serial mode. In parallel mode, multiple bits are sent with each clock tick.
In serial mode, 1 bit is sent with each clock tick. While there is only one way to send
parallel data, there are three subclasses of serial transmission: asynchronous, synchronous, and isochronous 


Q.Types of Errors
Whenever bits flow from one point to another, they are subject to unpredictable
changes because of interference. This interference can change the shape of the signal.
The term single-bit error means that only 1 bit of a given data unit (such as a byte, character, or packet) is changed from 1 to 0 or from 0 to 1. The term burst error means that 2 or more bits in the data unit have changed from 1 to 0 or from 0 to 1.  


Q.Redundancy
The central concept in detecting or correcting errors is redundancy. To be able to
detect or correct errors, we need to send some extra bits with our data. These redundant
bits are added by the sender and removed by the receiver. Their presence allows the
receiver to detect or correct corrupted bits.


Q.Detection versus Correction
The correction of errors is more difficult than the detection. In error detection, we are
only looking to see if any error has occurred. The answer is a simple yes or no. We are not
even interested in the number of corrupted bits. A single-bit error is the same for us as a
burst error. In error correction, we need to know the exact number of bits that are corrupted and, more importantly, their location in the message. The number of errors and the
size of the message are important factors. If we need to correct a single error in an 8-bit
data unit, we need to consider eight possible error locations; if we need to correct two errors in a data unit of the same size, we need to consider 28 (permutation of 8 by 2)
possibilities. You can imagine the receiver’s difficulty in finding 10 errors in a data unit of
1000 bits.


Q.Error Detection
How can errors be detected by using block coding? If the following two conditions are
met, the receiver can detect a change in the original codeword.
1. The receiver has (or can find) a list of valid codewords.
2. The original codeword has changed to an invalid one.


Q.Linear Block Codes
Almost all block codes used today belong to a subset of block codes called linear block
codes. The use of nonlinear block codes for error detection and correction is not as
widespread because their structure makes theoretical analysis and implementation difficult. We therefore concentrate on linear block codes. The formal definition of linear
block codes requires the knowledge of abstract algebra (particularly Galois fields),
which is beyond the scope of this book. We therefore give an informal definition. For
our purposes, a linear block code is a code in which the exclusive OR (addition
modulo-2) of two valid codewords creates another valid codeword. 


Q.Cyclic Redundancy Check
We can create cyclic codes to correct errors. However, the theoretical background
required is beyond the scope of this book. In this section, we simply discuss a subset of
cyclic codes called the cyclic redundancy check (CRC), which is used in networks
such as LANs and WANs


Q.Encoder : 
An Encoder is a device that converts the active data signal into a coded message format or it is a device that converts analogue signal to digital signals. It is a combinational circuit, that converts binary information in the form of a 2N input lines into N output lines which represent N bit code for the input. When an input signal is applied to an encoder then logic circuitry involved within it converts that particular input into coded binary output. 

Q. Decoder : 
A decoder is also a combinational circuit as encoder but its operation is exactly reverse as that of the encoder. A decoder is a device that generates the original signal as output from the coded input signal and converts n lines of input into 2n lines of output. An AND gate can be used as the basic decoding element because it produces a high output only when all inputs are high. 


Q.Error Control
Since the underlying technology at the physical layer is not fully reliable, we need to
implement error control at the data-link layer to prevent the receiving node from delivering corrupted packets to its network layer. Error control at the data-link layer is normally
very simple and implemented using one of the following two methods. In both methods, a
CRC is added to the frame header by the sender and checked by the receiver.
❑ In the first method, if the frame is corrupted, it is silently discarded; if it is not corrupted, the packet is delivered to the network layer. This method is used mostly in
wired LANs such as Ethernet.
❑ In the second method, if the frame is corrupted, it is silently discarded; if it is not
corrupted, an acknowledgment is sent (for the purpose of both flow and error control) to the sender.

Q.Combination of Flow and Error Control
Flow and error control can be combined. In a simple situation, the acknowledgment that
is sent for flow control can also be used for error control to tell the sender the packet has
arrived uncorrupted. The lack of acknowledgment means that there is a problem in the
sent frame. We show this situation when we discuss some simple protocols in the next
section. A frame that carries an acknowledgment is normally called an ACK to distinguish it from the data frame. 

Q.Flow Control
Whenever an entity produces items and another entity consumes them, there should be
a balance between production and consumption rates. If the items are produced faster
than they can be consumed, the consumer can be overwhelmed and may need to discard
some items. If the items are produced more slowly than they can be consumed, the consumer must wait, and the system becomes less efficient. Flow control is related to the
first issue. We need to prevent losing the data items at the consumer site.
In communication at the data-link layer, we are dealing with four entities: network
and data-link layers at the sending node and network and data-link layers at the receiving node. Although we can have a complex relationship with more than one producer
and consumer (as we will see in Chapter 23), we ignore the relationships between networks and data-link layers and concentrate on the relationship between two data-link
layers


Q.Connectionless and Connection-Oriented
A DLC protocol can be either connectionless or connection-oriented. We will discuss
this issue very briefly here, but we return to this topic in the network and transport
layer.

1. Connectionless Protocol
In a connectionless protocol, frames are sent from one node to the next without any
relationship between the frames; each frame is independent. Note that the term connectionless here does not mean that there is no physical connection (transmission medium)
between the nodes; it means that there is no connection between frames. The frames are
not numbered and there is no sense of ordering. Most of the data-link protocols for
LANs are connectionless protocols.

2.Connection-Oriented Protocol
In a connection-oriented protocol, a logical connection should first be established
between the two nodes (setup phase). After all frames that are somehow related to each
other are transmitted (transfer phase), the logical connection is terminated (teardown
phase). In this type of communication, the frames are numbered and sent in order. If
they are not received in order, the receiver needs to wait until all frames belonging to the
same set are received and then deliver them in order to the network layer. Connectionoriented protocols are rare in wired LANs, but we can see them in some point-to-point
protocols, some wireless LANs, and some WANs. 


Q.Framing
To provide the flexibility necessary to support all the options possible in the modes and
configurations just described, HDLC defines three types of frames: information frames
(I-frames), supervisory frames (S-frames), and unnumbered frames (U-frames). Each type
of frame serves as an envelope for the transmission of a different type of message. Iframes are used to data-link user data and control information relating to user data (piggybacking). S-frames are used only to transport control information. U-frames are reserved
for system management. Information carried by U-frames is intended for managing the link itself. Each frame in HDLC may contain up to six fields, as shown in Figure 11.16: a
beginning flag field, an address field, a control field, an information field, a frame check
sequence (FCS) field, and an ending flag field. In multiple-frame transmissions, the ending flag of one frame can serve as the beginning flag of the next frame.


Q.Let us now discuss the fields and their use in different frame types.
❑ Flag field. This field contains synchronization pattern 01111110, which identifies
both the beginning and the end of a frame.
❑ Address field. This field contains the address of the secondary station. If a primary
station created the frame, it contains a to address. If a secondary station creates the
frame, it contains a from address. The address field can be one byte or several bytes
long, depending on the needs of the network.
❑ Control field. The control field is one or two bytes used for flow and error control.
The interpretation of bits are discussed later.
❑ Information field. The information field contains the user’s data from the network
layer or management information. Its length can vary from one network to another.
❑ FCS field. The frame check sequence (FCS) is the HDLC error detection field. It
can contain either a 2- or 4-byte CRC.

Q.Control Field for U-Frames
Unnumbered frames are used to exchange session management and control information between connected devices. Unlike S-frames, U-frames contain an information
field, but one used for system management information, not user data. As with S-frames,
however, much of the information carried by U-frames is contained in codes included in
the control field. U-frame codes are divided into two sections: a 2-bit prefix before the P/
F bit and a 3-bit suffix after the P/F bit. Together, these two segments (5 bits) can be used
to create up to 32 different types of U-frames. 





















